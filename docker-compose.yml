services:
  # Frontend
  frontend:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./docker/frontend/html:/usr/share/nginx/html
      # Use a bind mount with additional properties
      - type: bind
        source: ./nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    depends_on:
      - backend
    networks:
      - app-network
    # Add labels to help compose-bridge
    labels:
      io.compose-spec.config.nginx: "true"

  # Backend API Service
  backend:
    build:
      context: ./docker/backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - db
    networks:
      - app-network
    environment:
      - DATABASE_URL=postgres://postgres:example@db:5432/demo
      - NODE_ENV=development
      - PORT=5000

  # Database Service
  db:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_DB: demo
    ports:
      - "5432:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
